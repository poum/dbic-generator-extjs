# NAME

ExtJS::Generator::DBIC - ExtJS::Generator::DBIC::TypeTranslator - ExtJS MVC class generator using DBIx::Class schema

# VERSION

version 0.001001

# SYNOPSYS

    use ExtJS::Generator::DBIC;

    my $extjs_generator = ExtJS::Generator::DBIC->new(schema_name => 'My::Schema');

    $extjs_generator->models();

## METHODS

### schema\_name

Give the name of the schema module passed as parameter

### js\_name

The javascript file namespace

### schema

Return the DBIx::Class schema object

### tables

Return an array reference of all schema table names

### order

Return an hashref of applied order to json extjs generated file

### path

The path where the js files can be retrieved / wrote

### json

JSON converter engine

### typeTranslator

DBIx::Class ExtJS type translator

### models

Generate all ExtJS models found in the DBIx::Class Schema

### extjs\_model\_name

This method returns the ExtJS model name for a table and can be overridden
in a subclass.

### model

Generate specified ExtJS model (field definition, validation rules, proxy and association). 
If a javascript model file already exists, all other keys are preserved.

If a nullable boolean field is encountered, the corresponding presence validation rule is'nt
generated to avoid ExtJS transform the null values in false ones.

# TODO

- store / treestore generator
- controller generator (using template)
- form generator (combo for associated data)
- grid / tree generator
- use md5 (has DBIx::Class::Loader do) to verify the modified parts (compress then order the json file first)
- add backup / stop option if the generated file already exists
- use extjs main file for finding path to file and namespace
- use a config file
- search in local directory by default
- parse json with js comments
- fully restore previous json with just adding modfications
- add test for rewriting existing model files 

# AUTHORS

- Alexander Hartmaier <abraxxa@cpan.org>
- Philippe Poumaroux  <poum@cpan.org>

# COPYRIGHT AND LICENSE

This software is copyright (c) 2013 by Alexander Hartmaier.

This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.
